<Activity mc:Ignorable="sap sap2010" x:Class="Rec_Test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="arg_int_maxCapacity" Type="InArgument(x:Int32)" />
    <x:Property Name="arg_str_extensions" Type="InArgument(x:String)" />
    <x:Property Name="arg_str_excludes" Type="InArgument(x:String)" />
    <x:Property Name="arg_int_xDays" Type="InArgument(x:Int32)" />
    <x:Property Name="arg_str_currentFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="arg_bool_isIncludeSubFolders" Type="InArgument(x:Boolean)" />
    <x:Property Name="arg_bool_isArchive" Type="InArgument(x:Boolean)" />
    <x:Property Name="arg_str_archivePath" Type="InArgument(x:String)" />
    <x:Property Name="arg_str_rootFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="arg_str_archiveZipFolderPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1153.33333333333,986</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Rec_Test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Handle folder" sap:VirtualizedContainerService.HintSize="604.666666666667,921.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="strArr_excludes" />
      <Variable x:TypeArguments="x:String" Name="str_currentFileDestPath">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[New DirectoryInfo(arg_str_currentFolderPath).GetFiles(&quot;project.json&quot;,SearchOption.TopDirectoryOnly).Count=0]" DisplayName="if Current Folder Contains project.json file - ignore all dir" sap:VirtualizedContainerService.HintSize="562.666666666667,829.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence DisplayName="Sequence Handle folder" sap:VirtualizedContainerService.HintSize="526,637.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Handle current Folder files" sap:VirtualizedContainerService.HintSize="304,588.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="IEnu_currentExtensionFiles" />
              <Variable x:TypeArguments="s:String[]" Name="strArr_extensions" />
              <Variable x:TypeArguments="x:Int32" Name="int_numOfFilesInCurrFolder" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <WriteLine DisplayName="testtttt" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[arg_str_currentFolderPath]" />
            <Assign DisplayName="get extensions and lower case them " sap:VirtualizedContainerService.HintSize="262,65.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[strArr_extensions]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[(From str In arg_str_extensions.Split(","c)
                        Select str.ToLower()).ToArray()]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="get number of files in current folder" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_numOfFilesInCurrFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Directory.GetFiles(arg_str_currentFolderPath,"*.*",SearchOption.TopDirectoryOnly).Count]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="" DisplayName="get the files within the root dir" sap:VirtualizedContainerService.HintSize="262,96" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[IEnu_currentExtensionFiles]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:IEnumerable(x:String)" xml:space="preserve">[New DirectoryInfo(arg_str_currentFolderPath).GetFiles("*.*",SearchOption.TopDirectoryOnly).Where(
Function (x)  Not x.Extension.Equals(".xaml") AndAlso 
	Not x.Extension.Equals(".metadata") AndAlso 
	Not x.Extension.Equals(".type") AndAlso 
	Not x.Extension.Equals(".conf") AndAlso 
	(strArr_extensions.Contains(x.Extension.Substring(1).ToLower) OrElse strArr_extensions.Contains("*") ) AndAlso
	x.LastWriteTime.Date&lt;=today.AddDays(CInt(-arg_int_xDays))).OrderBy(Function(x) x.LastWriteTime).Take(int_numOfFilesInCurrFolder-arg_int_maxCapacity).Select(Function(x) x.FullName).ToArray]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ParallelForEach x:TypeArguments="x:String" DisplayName="Parallel For each file " sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1" Values="[IEnu_currentExtensionFiles]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="272,262" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="testttt" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;file= &quot;+file.ToString]" />
                  <Sequence DisplayName="Sequence - archive or delete" sap:VirtualizedContainerService.HintSize="230,68" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="strArr_FilePaths" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[arg_bool_isArchive]" DisplayName="if archive" sap:VirtualizedContainerService.HintSize="1010.66666666667,1390" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence DisplayName="Adding To Archive " sap:VirtualizedContainerService.HintSize="526,1228" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="testttt" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;folder name=&quot;+System.Text.RegularExpressions.Regex.Match(new FileInfo(file.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString]" />
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;result====&quot;+arg_str_archiveZipFolderPath+System.Text.RegularExpressions.Regex.Match(new FileInfo(file.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString+&quot;\&quot;+new FileInfo(file.ToString).Name]" />
                          <If Condition="[not Directory.Exists(arg_str_archiveZipFolderPath+System.Text.RegularExpressions.Regex.Match(new FileInfo(file.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString)]" DisplayName="creates the sub folder in the archive folder if not exists" sap:VirtualizedContainerService.HintSize="484,364" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,172" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[arg_str_archiveZipFolderPath+System.Text.RegularExpressions.Regex.Match(new FileInfo(file.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <TryCatch DisplayName="Try move the file to archive " sap:VirtualizedContainerService.HintSize="484,394.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <TryCatch.Try>
                              <ui:MoveFile ContinueOnError="True" Destination="[arg_str_archiveZipFolderPath+System.Text.RegularExpressions.Regex.Match(new FileInfo(file.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString+&quot;\&quot;+new FileInfo(file.ToString).Name]" DisplayName="move file to archive" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[file.ToString]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,21.3333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Could not access the file - &quot;+file.ToString]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[file.ToString+&quot;  MOVED TO ARCHIVE&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <TryCatch DisplayName="Try to make the deletion" sap:VirtualizedContainerService.HintSize="438.666666666667,540" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <TryCatch.Try>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,305.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file.ToString]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[file.ToString+&quot;  WAS DELETED&quot;]" />
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,21.3333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;could not access the file - &quot;+file.ToString]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Else>
                    </If>
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ParallelForEach>
          </Sequence>
          <If Condition="[arg_bool_isIncludeSubFolders]" DisplayName="is include sub folders - do the same for each sub folder" sap:VirtualizedContainerService.HintSize="484,437.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence DisplayName="recursively continue for sub folder" sap:VirtualizedContainerService.HintSize="304,245.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="get excludes" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[strArr_excludes]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[arg_str_excludes.Split(","c)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each sub folder - make another iteration" sap:VirtualizedContainerService.HintSize="562.666666666667,616" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetDirectories(arg_str_currentFolderPath)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="folder" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,489.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[not strArr_excludes.Contains( New DirectoryInfo(folder.ToString).Name)]" DisplayName="if the folder doesnt need to be excluded " sap:VirtualizedContainerService.HintSize="484,397.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,205.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Handle_Folder.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_maxCapacity">
                                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="arg_int_maxCapacity" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_extensions">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="arg_str_extensions" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_excludes">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="arg_str_excludes" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_xDays">
                                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="arg_int_xDays" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_currentFolderPath">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="folder.ToString" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isIncludeSubFolders">
                                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="arg_bool_isIncludeSubFolders" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isArchive">
                                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="arg_bool_isArchive" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_archivePath">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="arg_str_archivePath" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_rootFolderPath">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="arg_str_rootFolderPath" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="arg_str_archiveZipFolderPath">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="arg_str_archiveZipFolderPath+System.Text.RegularExpressions.Regex.Match(new FileInfo(folder.ToString).DirectoryName,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>
<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_str_excelConfigFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1153.33333333333,712</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="664.666666666667,647.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_excelData" />
      <Variable x:TypeArguments="x:Int32" Name="int_rowIndex">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="bool_IsArchivePathValid">
        <Variable.Default>
          <Literal x:TypeArguments="x:Boolean" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="bool_IsDirPathValid">
        <Variable.Default>
          <Literal x:TypeArguments="x:Boolean" />
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,127.166666666667</av:PointCollection>
        <x:Double x:Key="Height">611.33333333333326</x:Double>
        <x:Double x:Key="Width">631</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID10</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.166666666667</av:Point>
          <av:Size x:Key="ShapeSize">200,128</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,255.166666666667 300,308.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="reads excel data into data table.&#xA;deletes irrelevant columns" DisplayName="Read Data From Excel" sap:VirtualizedContainerService.HintSize="200,128" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="1000" ReadOnly="True" Visible="False" WorkbookPath="[in_str_excelConfigFilePath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,150.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_excelData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Data">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,308.5</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ParallelForEach x:TypeArguments="sd:DataRow" DisplayName="Parallel For each row" sap:VirtualizedContainerService.HintSize="524,588" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_23" Values="[dt_excelData.AsEnumerable]">
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Sequence - handle row" sap:VirtualizedContainerService.HintSize="473.333333333333,436.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_133">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="sss" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="columns validation + filter numeric columns  " sap:VirtualizedContainerService.HintSize="431.333333333333,252.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bool_IsArchivePathValid]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Boolean">[If(CurrentRow("Save To Archive?").ToString.Equals("False") OrElse Directory.Exists(CurrentRow("Archive Directory").ToString) ,True,False)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bool_IsDirPathValid]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Boolean">[Directory.Exists(CurrentRow("Directory").ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[currentRow("Delete Files Older Than X Days")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[if(currentRow("Delete Files Older Than X Days").ToString.Equals("") ,"0",currentRow("Delete Files Older Than X Days").ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[currentRow("Folder Max Capacity")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[If(currentRow("Folder Max Capacity").ToString.Equals(""),"0",currentRow("Folder Max Capacity").ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[currentRow("Include Sub Folder?")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[if(currentRow("Include Sub Folder?").ToString.Equals(""),False,currentRow("Include Sub Folder?").ToString.Equals("True"))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[currentRow("Save To Archive?")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[if(currentRow("Save To Archive?").ToString.Equals(""),False,currentRow("Save To Archive?").ToString.Equals("True"))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <Flowchart DisplayName="Flowchart handle row " sap:VirtualizedContainerService.HintSize="1238,914.666666666667" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                  <Flowchart.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_archiveFolderPath">
                      <Variable.Default>
                        <Literal x:TypeArguments="x:String" Value="" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="IEnu_currentExtensionFiles" />
                  </Flowchart.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <av:Point x:Key="ShapeLocation">40,2.66666666666666</av:Point>
                      <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">100,40 728,40 728,86.6666666666667</av:PointCollection>
                      <x:Double x:Key="Width">1204.3200278141414</x:Double>
                      <x:Double x:Key="Height">878.66666666666663</x:Double>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Flowchart.StartNode>
                    <x:Reference>__ReferenceID8</x:Reference>
                  </Flowchart.StartNode>
                  <FlowDecision x:Name="__ReferenceID8" sap2010:Annotation.AnnotationText="checks if directory path valid and incase archive needed - checks also the archive path and both folders are not project folders" DisplayName="Is Paths Valid" sap:VirtualizedContainerService.HintSize="74.6666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
                    <FlowDecision.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="bool_IsArchivePathValid and bool_IsDirPathValid" />
                    </FlowDecision.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">690.666666666667,86.6666666666667</av:Point>
                        <av:Size x:Key="ShapeSize">74.6666666666667,86.6666666666667</av:Size>
                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        <av:PointCollection x:Key="TrueConnector">690.666666666667,130 550,130 550,216.666666666667</av:PointCollection>
                        <av:PointCollection x:Key="FalseConnector">765.333333333334,130 890,130</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowDecision x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="check if archive is needed" DisplayName="Is Archive" sap:VirtualizedContainerService.HintSize="70,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                        <FlowDecision.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="CurrentRow(&quot;Save To Archive?&quot;).ToString.Equals(&quot;True&quot;)" />
                        </FlowDecision.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">515,216.666666666667</av:Point>
                            <av:Size x:Key="ShapeSize">70,86.6666666666667</av:Size>
                            <av:PointCollection x:Key="TrueConnector">515,260 330,260 330,284</av:PointCollection>
                            <av:PointCollection x:Key="FalseConnector">585,260 760,260 760,534</av:PointCollection>
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">230,284</av:Point>
                                <av:Size x:Key="ShapeSize">200,112</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">330,396 330,414</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="get number of file the folder currently holds.&#xA;set the archive folder name" DisplayName="Calc filesNo and archive path" sap:VirtualizedContainerService.HintSize="200,112" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[str_archiveFolderPath]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.Combine(CurrentRow("Archive Directory").ToString,new DirectoryInfo(CurrentRow("Directory").ToString).Name+" "+DateTime.Now.ToString("dd-MM-yy")+" "+DateTime.Now.ToString("hh-mm-ss"))]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">230,414</av:Point>
                                    <av:Size x:Key="ShapeSize">200,112</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">330,526 330,544</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="this temporary folder will be zipped after dealing with all the files " DisplayName="Create temp Folder" sap:VirtualizedContainerService.HintSize="200,112" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[str_archiveFolderPath]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CreateDirectory>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">230,544</av:Point>
                                        <av:Size x:Key="ShapeSize">200,52</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">330,596 330,636</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Handle_Folder.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_maxCapacity">
                                          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(currentRow(&quot;Folder Max Capacity&quot;))" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_extensions">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Files Extensions&quot;).ToString" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_excludes">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Exclude&quot;).ToString" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_xDays">
                                          <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(currentRow(&quot;Delete Files Older Than X Days&quot;))" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_currentFolderPath">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Directory&quot;).ToString" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isIncludeSubFolders">
                                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="currentRow(&quot;Include Sub Folder?&quot;).ToString.Equals(&quot;True&quot;)" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isArchive">
                                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="currentRow(&quot;Save To Archive?&quot;).ToString.Equals(&quot;True&quot;)" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_archivePath">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Archive Directory&quot;).ToString" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_rootFolderPath">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Directory&quot;).ToString" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="arg_str_archiveZipFolderPath">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_archiveFolderPath" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">230,636</av:Point>
                                            <av:Size x:Key="ShapeSize">200,68</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Zip Folfer" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If sap2010:Annotation.AnnotationText="before deleting the prev dir - check if it necessary meaning - if there are files in the new dir&#xA;" Condition="[File.Exists(str_archiveFolderPath+&quot;.zip&quot;) AndAlso Directory.GetFiles(str_archiveFolderPath,&quot;*.*&quot;,SearchOption.AllDirectories).Count&gt;0]" DisplayName="delete the privious zip file if exsits" sap:VirtualizedContainerService.HintSize="484,424" sap2010:WorkflowViewState.IdRef="If_35">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="326,172" sap2010:WorkflowViewState.IdRef="Sequence_122">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="Delete_10" Path="[str_archiveFolderPath+&quot;.zip&quot;]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_123">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="WriteLine_59" Text="[&quot;dest=&quot;+CurrentRow(&quot;Archive Directory&quot;).ToString+System.Text.RegularExpressions.Regex.Match(CurrentRow(&quot;Directory&quot;).ToString,&quot;\\+[^\\]*}*(?!.*\\)&quot;).ToString+&quot;.zip&quot;]" />
                                          <If Condition="[Directory.GetFiles(str_archiveFolderPath,&quot;*.*&quot;,SearchOption.AllDirectories).Count &gt;0]" DisplayName="if there are files in the temp folder then create the zip folder" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="If_36">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="System.IO.Compression.ZipFile.CreateFromDirectory(origin,dest)&#xA;" DisplayName="create the zip folder" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                                                <ui:InvokeCode.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="dest">[str_archiveFolderPath+".zip"]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="origin">[str_archiveFolderPath]</InArgument>
                                                </ui:InvokeCode.Arguments>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InvokeCode>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_124">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:DeleteFolderX DisplayName="Delete the temp Folder" sap:VirtualizedContainerService.HintSize="484,52" sap2010:WorkflowViewState.IdRef="DeleteFolderX_2" Path="[str_archiveFolderPath]" Recursive="True">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:DeleteFolderX>
                                        </Sequence>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">660,534</av:Point>
                                <av:Size x:Key="ShapeSize">200,52</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">140,698 140,726</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Handle_Folder.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_maxCapacity">
                                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(currentRow(&quot;Folder Max Capacity&quot;))" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_extensions">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Files Extensions&quot;).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_excludes">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Exclude&quot;).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="arg_int_xDays">
                                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="CInt(currentRow(&quot;Delete Files Older Than X Days&quot;))" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_currentFolderPath">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Directory&quot;).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isIncludeSubFolders">
                                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="currentRow(&quot;Include Sub Folder?&quot;).ToString.Equals(&quot;True&quot;)" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="arg_bool_isArchive">
                                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="currentRow(&quot;Save To Archive?&quot;).ToString.Equals(&quot;True&quot;)" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_archivePath">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_rootFolderPath">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="currentRow(&quot;Directory&quot;).ToString" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="arg_str_archiveZipFolderPath">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID0">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">890,104</av:Point>
                            <av:Size x:Key="ShapeSize">200,52</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">990,156 990,204</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:RaiseAlert TimeoutMS="{x:Null}" DisplayName="Raise Alert - path was not found" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="RaiseAlert_2" Notification="[if(not bool_IsArchivePathValid,&quot;File directory &quot;+currentRow(&quot;Directory&quot;).ToString +&quot;not exist&quot;,&quot;Archive File directory &quot;+currentRow(&quot;Archive Directory&quot;).ToString +&quot;not exist&quot;)]" Severity="Info" />
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">890,204</av:Point>
                                <av:Size x:Key="ShapeSize">200,52</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message-  path was not found" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Warn" Message="[if(not bool_IsArchivePathValid,&quot;File directory &quot;+currentRow(&quot;Directory&quot;).ToString +&quot;not exist&quot;,&quot;Archive File directory &quot;+currentRow(&quot;Archive Directory&quot;).ToString +&quot;not exist&quot;)]" />
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                  <x:Reference>__ReferenceID0</x:Reference>
                  <x:Reference>__ReferenceID1</x:Reference>
                  <x:Reference>__ReferenceID2</x:Reference>
                  <x:Reference>__ReferenceID3</x:Reference>
                  <x:Reference>__ReferenceID4</x:Reference>
                  <x:Reference>__ReferenceID5</x:Reference>
                  <x:Reference>__ReferenceID6</x:Reference>
                  <x:Reference>__ReferenceID7</x:Reference>
                </Flowchart>
              </Sequence>
            </ActivityAction>
          </ParallelForEach>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID9</x:Reference>
  </Flowchart>
</Activity>